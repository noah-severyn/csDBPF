### YamlMime:ManagedReference
items:
- uid: csDBPF.TGI
  commentId: T:csDBPF.TGI
  id: TGI
  parent: csDBPF
  children:
  - csDBPF.TGI.#ctor(System.UInt32,System.UInt32,System.UInt32)
  - csDBPF.TGI.#ctor(csDBPF.TGI)
  - csDBPF.TGI.CompareTo(csDBPF.TGI)
  - csDBPF.TGI.Equals(System.Object)
  - csDBPF.TGI.GetEntryDetail
  - csDBPF.TGI.GetEntryType
  - csDBPF.TGI.GetHashCode
  - csDBPF.TGI.GroupID
  - csDBPF.TGI.InstanceID
  - csDBPF.TGI.Matches(csDBPF.TGI)
  - csDBPF.TGI.MatchesAnyKnown
  - csDBPF.TGI.MatchesExactly(csDBPF.TGI)
  - csDBPF.TGI.RandomizeGroup
  - csDBPF.TGI.RandomizeInstance
  - csDBPF.TGI.ToString
  - csDBPF.TGI.TypeID
  - csDBPF.TGI.op_Equality(csDBPF.TGI,csDBPF.TGI)
  - csDBPF.TGI.op_Inequality(csDBPF.TGI,csDBPF.TGI)
  langs:
  - csharp
  - vb
  name: TGI
  nameWithType: TGI
  fullName: csDBPF.TGI
  type: Struct
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: TGI
    path: ../DBPFTGI.cs
    startLine: 13
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: A struct representing three unsigned integers as a Type, Group, Instance pair.
  example: []
  syntax:
    content: 'public struct TGI : IComparable<TGI>'
    content.vb: Public Structure TGI Implements IComparable(Of TGI)
  implements:
  - System.IComparable{csDBPF.TGI}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: csDBPF.TGI.TypeID
  commentId: P:csDBPF.TGI.TypeID
  id: TypeID
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: TypeID
  nameWithType: TGI.TypeID
  fullName: csDBPF.TGI.TypeID
  type: Property
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: TypeID
    path: ../DBPFTGI.cs
    startLine: 17
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: <a href="https://www.wiki.sc4devotion.com/index.php?title=Type_ID">Type ID</a> (TID).
  example: []
  syntax:
    content: public readonly uint TypeID { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property TypeID As UInteger
  overload: csDBPF.TGI.TypeID*
- uid: csDBPF.TGI.GroupID
  commentId: P:csDBPF.TGI.GroupID
  id: GroupID
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: GroupID
  nameWithType: TGI.GroupID
  fullName: csDBPF.TGI.GroupID
  type: Property
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: GroupID
    path: ../DBPFTGI.cs
    startLine: 22
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: <a href="https://www.wiki.sc4devotion.com/index.php?title=Group_ID">Group ID</a> (GID).
  example: []
  syntax:
    content: public readonly uint GroupID { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property GroupID As UInteger
  overload: csDBPF.TGI.GroupID*
- uid: csDBPF.TGI.InstanceID
  commentId: P:csDBPF.TGI.InstanceID
  id: InstanceID
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: InstanceID
  nameWithType: TGI.InstanceID
  fullName: csDBPF.TGI.InstanceID
  type: Property
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: InstanceID
    path: ../DBPFTGI.cs
    startLine: 27
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: <a href="https://www.wiki.sc4devotion.com/index.php?title=Instance_ID">Instance ID</a> (IID).
  example: []
  syntax:
    content: public readonly uint InstanceID { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property InstanceID As UInteger
  overload: csDBPF.TGI.InstanceID*
- uid: csDBPF.TGI.#ctor(System.UInt32,System.UInt32,System.UInt32)
  commentId: M:csDBPF.TGI.#ctor(System.UInt32,System.UInt32,System.UInt32)
  id: '#ctor(System.UInt32,System.UInt32,System.UInt32)'
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: TGI(uint, uint, uint)
  nameWithType: TGI.TGI(uint, uint, uint)
  fullName: csDBPF.TGI.TGI(uint, uint, uint)
  type: Constructor
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: .ctor
    path: ../DBPFTGI.cs
    startLine: 53
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Create a struct representing three uints as a Type, Group, Instance triplet. A random value will be set for a Group or Instance if either is zero.
  example: []
  syntax:
    content: public TGI(uint t, uint g, uint i)
    parameters:
    - id: t
      type: System.UInt32
      description: Type ID
    - id: g
      type: System.UInt32
      description: Group ID
    - id: i
      type: System.UInt32
      description: Instance ID
    content.vb: Public Sub New(t As UInteger, g As UInteger, i As UInteger)
  overload: csDBPF.TGI.#ctor*
  nameWithType.vb: TGI.New(UInteger, UInteger, UInteger)
  fullName.vb: csDBPF.TGI.New(UInteger, UInteger, UInteger)
  name.vb: New(UInteger, UInteger, UInteger)
- uid: csDBPF.TGI.#ctor(csDBPF.TGI)
  commentId: M:csDBPF.TGI.#ctor(csDBPF.TGI)
  id: '#ctor(csDBPF.TGI)'
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: TGI(TGI)
  nameWithType: TGI.TGI(TGI)
  fullName: csDBPF.TGI.TGI(csDBPF.TGI)
  type: Constructor
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: .ctor
    path: ../DBPFTGI.cs
    startLine: 70
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Create a new DBPFTGI based on a known entry type. Assigns a random Group or Instance as appropriate.
  example: []
  syntax:
    content: public TGI(TGI knownEntry)
    parameters:
    - id: knownEntry
      type: csDBPF.TGI
      description: Known entry type. Should be one of the static types in <xref href="csDBPF.DBPFTGI" data-throw-if-not-resolved="false"></xref> class.
    content.vb: Public Sub New(knownEntry As TGI)
  overload: csDBPF.TGI.#ctor*
  nameWithType.vb: TGI.New(TGI)
  fullName.vb: csDBPF.TGI.New(csDBPF.TGI)
  name.vb: New(TGI)
- uid: csDBPF.TGI.CompareTo(csDBPF.TGI)
  commentId: M:csDBPF.TGI.CompareTo(csDBPF.TGI)
  id: CompareTo(csDBPF.TGI)
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: CompareTo(TGI)
  nameWithType: TGI.CompareTo(TGI)
  fullName: csDBPF.TGI.CompareTo(csDBPF.TGI)
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: CompareTo
    path: ../DBPFTGI.cs
    startLine: 85
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
  example: []
  syntax:
    content: public int CompareTo(TGI other)
    parameters:
    - id: other
      type: csDBPF.TGI
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: >-
        A value that indicates the relative order of the objects being compared. The return value has these meanings:  

         <table><thead><tr><th class="term"> Value</th><th class="description"> Meaning</th></tr></thead><tbody><tr><td class="term"> Less than zero</td><td class="description"> This instance precedes <code class="paramref">other</code> in the sort order.</td></tr><tr><td class="term"> Zero</td><td class="description"> This instance occurs in the same position in the sort order as <code class="paramref">other</code>.</td></tr><tr><td class="term"> Greater than zero</td><td class="description"> This instance follows <code class="paramref">other</code> in the sort order.</td></tr></tbody></table>
    content.vb: Public Function CompareTo(other As TGI) As Integer
  overload: csDBPF.TGI.CompareTo*
  implements:
  - System.IComparable{csDBPF.TGI}.CompareTo(csDBPF.TGI)
- uid: csDBPF.TGI.Equals(System.Object)
  commentId: M:csDBPF.TGI.Equals(System.Object)
  id: Equals(System.Object)
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: TGI.Equals(object)
  fullName: csDBPF.TGI.Equals(object)
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: Equals
    path: ../DBPFTGI.cs
    startLine: 104
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Evaluate whether two TGIs are identical.
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: TRUE if the TGIs are identical; FALSE otherwise
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: csDBPF.TGI.Equals*
  nameWithType.vb: TGI.Equals(Object)
  fullName.vb: csDBPF.TGI.Equals(Object)
  name.vb: Equals(Object)
- uid: csDBPF.TGI.op_Equality(csDBPF.TGI,csDBPF.TGI)
  commentId: M:csDBPF.TGI.op_Equality(csDBPF.TGI,csDBPF.TGI)
  id: op_Equality(csDBPF.TGI,csDBPF.TGI)
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: operator ==(TGI, TGI)
  nameWithType: TGI.operator ==(TGI, TGI)
  fullName: csDBPF.TGI.operator ==(csDBPF.TGI, csDBPF.TGI)
  type: Operator
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: op_Equality
    path: ../DBPFTGI.cs
    startLine: 109
  assemblies:
  - csDBPF
  namespace: csDBPF
  example: []
  syntax:
    content: public static bool operator ==(TGI left, TGI right)
    parameters:
    - id: left
      type: csDBPF.TGI
    - id: right
      type: csDBPF.TGI
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As TGI, right As TGI) As Boolean
  overload: csDBPF.TGI.op_Equality*
  nameWithType.vb: TGI.=(TGI, TGI)
  fullName.vb: csDBPF.TGI.=(csDBPF.TGI, csDBPF.TGI)
  name.vb: =(TGI, TGI)
- uid: csDBPF.TGI.op_Inequality(csDBPF.TGI,csDBPF.TGI)
  commentId: M:csDBPF.TGI.op_Inequality(csDBPF.TGI,csDBPF.TGI)
  id: op_Inequality(csDBPF.TGI,csDBPF.TGI)
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: operator !=(TGI, TGI)
  nameWithType: TGI.operator !=(TGI, TGI)
  fullName: csDBPF.TGI.operator !=(csDBPF.TGI, csDBPF.TGI)
  type: Operator
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: op_Inequality
    path: ../DBPFTGI.cs
    startLine: 111
  assemblies:
  - csDBPF
  namespace: csDBPF
  example: []
  syntax:
    content: public static bool operator !=(TGI left, TGI right)
    parameters:
    - id: left
      type: csDBPF.TGI
    - id: right
      type: csDBPF.TGI
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As TGI, right As TGI) As Boolean
  overload: csDBPF.TGI.op_Inequality*
  nameWithType.vb: TGI.<>(TGI, TGI)
  fullName.vb: csDBPF.TGI.<>(csDBPF.TGI, csDBPF.TGI)
  name.vb: <>(TGI, TGI)
- uid: csDBPF.TGI.GetHashCode
  commentId: M:csDBPF.TGI.GetHashCode
  id: GetHashCode
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TGI.GetHashCode()
  fullName: csDBPF.TGI.GetHashCode()
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: GetHashCode
    path: ../DBPFTGI.cs
    startLine: 113
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: csDBPF.TGI.GetHashCode*
- uid: csDBPF.TGI.Matches(csDBPF.TGI)
  commentId: M:csDBPF.TGI.Matches(csDBPF.TGI)
  id: Matches(csDBPF.TGI)
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: Matches(TGI)
  nameWithType: TGI.Matches(TGI)
  fullName: csDBPF.TGI.Matches(csDBPF.TGI)
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: Matches
    path: ../DBPFTGI.cs
    startLine: 127
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Evaluates equality of this item to another item.
  remarks: If any component of the specified TGI is 0 then the check will be skipped. This may be used to check against one of the <xref href="csDBPF.DBPFTGI.KnownEntries" data-throw-if-not-resolved="false"></xref> as a pseudo "is a" check.
  example: []
  syntax:
    content: public readonly bool Matches(TGI otherTGI)
    parameters:
    - id: otherTGI
      type: csDBPF.TGI
      description: TGI to compare to
    return:
      type: System.Boolean
      description: TRUE if Type, Group, and Instance of both values are match; FALSE if any differ
    content.vb: Public Function Matches(otherTGI As TGI) As Boolean
  overload: csDBPF.TGI.Matches*
- uid: csDBPF.TGI.MatchesExactly(csDBPF.TGI)
  commentId: M:csDBPF.TGI.MatchesExactly(csDBPF.TGI)
  id: MatchesExactly(csDBPF.TGI)
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: MatchesExactly(TGI)
  nameWithType: TGI.MatchesExactly(TGI)
  fullName: csDBPF.TGI.MatchesExactly(csDBPF.TGI)
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: MatchesExactly
    path: ../DBPFTGI.cs
    startLine: 152
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Check if the Type, Group, and Instance of two TGIs are identical.
  example: []
  syntax:
    content: public readonly bool MatchesExactly(TGI otherTGI)
    parameters:
    - id: otherTGI
      type: csDBPF.TGI
      description: TGI to check against
    return:
      type: System.Boolean
      description: TRUE if check passes; FALSE otherwise
    content.vb: Public Function MatchesExactly(otherTGI As TGI) As Boolean
  overload: csDBPF.TGI.MatchesExactly*
- uid: csDBPF.TGI.MatchesAnyKnown
  commentId: M:csDBPF.TGI.MatchesAnyKnown
  id: MatchesAnyKnown
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: MatchesAnyKnown()
  nameWithType: TGI.MatchesAnyKnown()
  fullName: csDBPF.TGI.MatchesAnyKnown()
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: MatchesAnyKnown
    path: ../DBPFTGI.cs
    startLine: 160
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Check whether this TGI matches any of the known entry TGI sets.
  example: []
  syntax:
    content: public readonly TGI MatchesAnyKnown()
    return:
      type: csDBPF.TGI
      description: Returns the nearest known TGI match
    content.vb: Public Function MatchesAnyKnown() As TGI
  overload: csDBPF.TGI.MatchesAnyKnown*
- uid: csDBPF.TGI.GetEntryType
  commentId: M:csDBPF.TGI.GetEntryType
  id: GetEntryType
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: GetEntryType()
  nameWithType: TGI.GetEntryType()
  fullName: csDBPF.TGI.GetEntryType()
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: GetEntryType
    path: ../DBPFTGI.cs
    startLine: 175
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Get the entry type associated with this TGI.
  example: []
  syntax:
    content: public readonly string GetEntryType()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetEntryType() As String
  overload: csDBPF.TGI.GetEntryType*
- uid: csDBPF.TGI.GetEntryDetail
  commentId: M:csDBPF.TGI.GetEntryDetail
  id: GetEntryDetail
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: GetEntryDetail()
  nameWithType: TGI.GetEntryDetail()
  fullName: csDBPF.TGI.GetEntryDetail()
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: GetEntryDetail
    path: ../DBPFTGI.cs
    startLine: 187
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Get the specific entry type associated with this TGI, as it relates to an in-game implementation.
  example: []
  syntax:
    content: public readonly string GetEntryDetail()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetEntryDetail() As String
  overload: csDBPF.TGI.GetEntryDetail*
- uid: csDBPF.TGI.ToString
  commentId: M:csDBPF.TGI.ToString
  id: ToString
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TGI.ToString()
  fullName: csDBPF.TGI.ToString()
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: ToString
    path: ../DBPFTGI.cs
    startLine: 199
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: csDBPF.TGI.ToString*
- uid: csDBPF.TGI.RandomizeGroup
  commentId: M:csDBPF.TGI.RandomizeGroup
  id: RandomizeGroup
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: RandomizeGroup()
  nameWithType: TGI.RandomizeGroup()
  fullName: csDBPF.TGI.RandomizeGroup()
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: RandomizeGroup
    path: ../DBPFTGI.cs
    startLine: 211
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Assign a random Group ID.
  example: []
  syntax:
    content: public void RandomizeGroup()
    content.vb: Public Sub RandomizeGroup()
  overload: csDBPF.TGI.RandomizeGroup*
- uid: csDBPF.TGI.RandomizeInstance
  commentId: M:csDBPF.TGI.RandomizeInstance
  id: RandomizeInstance
  parent: csDBPF.TGI
  langs:
  - csharp
  - vb
  name: RandomizeInstance()
  nameWithType: TGI.RandomizeInstance()
  fullName: csDBPF.TGI.RandomizeInstance()
  type: Method
  source:
    remote:
      path: csDBPF/csDBPF/DBPFTGI.cs
      branch: docs
      repo: https://github.com/noah-severyn/csDBPF.git
    id: RandomizeInstance
    path: ../DBPFTGI.cs
    startLine: 217
  assemblies:
  - csDBPF
  namespace: csDBPF
  summary: Assign a random Instance ID.
  example: []
  syntax:
    content: public void RandomizeInstance()
    content.vb: Public Sub RandomizeInstance()
  overload: csDBPF.TGI.RandomizeInstance*
references:
- uid: csDBPF
  commentId: N:csDBPF
  href: csDBPF.html
  name: csDBPF
  nameWithType: csDBPF
  fullName: csDBPF
- uid: System.IComparable{csDBPF.TGI}
  commentId: T:System.IComparable{csDBPF.TGI}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<TGI>
  nameWithType: IComparable<TGI>
  fullName: System.IComparable<csDBPF.TGI>
  nameWithType.vb: IComparable(Of TGI)
  fullName.vb: System.IComparable(Of csDBPF.TGI)
  name.vb: IComparable(Of TGI)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: csDBPF.TGI
    name: TGI
    href: csDBPF.TGI.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: csDBPF.TGI
    name: TGI
    href: csDBPF.TGI.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: csDBPF.TGI.TypeID*
  commentId: Overload:csDBPF.TGI.TypeID
  href: csDBPF.TGI.html#csDBPF_TGI_TypeID
  name: TypeID
  nameWithType: TGI.TypeID
  fullName: csDBPF.TGI.TypeID
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: csDBPF.TGI.GroupID*
  commentId: Overload:csDBPF.TGI.GroupID
  href: csDBPF.TGI.html#csDBPF_TGI_GroupID
  name: GroupID
  nameWithType: TGI.GroupID
  fullName: csDBPF.TGI.GroupID
- uid: csDBPF.TGI.InstanceID*
  commentId: Overload:csDBPF.TGI.InstanceID
  href: csDBPF.TGI.html#csDBPF_TGI_InstanceID
  name: InstanceID
  nameWithType: TGI.InstanceID
  fullName: csDBPF.TGI.InstanceID
- uid: csDBPF.TGI.#ctor*
  commentId: Overload:csDBPF.TGI.#ctor
  href: csDBPF.TGI.html#csDBPF_TGI__ctor_System_UInt32_System_UInt32_System_UInt32_
  name: TGI
  nameWithType: TGI.TGI
  fullName: csDBPF.TGI.TGI
  nameWithType.vb: TGI.New
  fullName.vb: csDBPF.TGI.New
  name.vb: New
- uid: csDBPF.DBPFTGI
  commentId: T:csDBPF.DBPFTGI
  href: csDBPF.DBPFTGI.html
  name: DBPFTGI
  nameWithType: DBPFTGI
  fullName: csDBPF.DBPFTGI
- uid: csDBPF.TGI
  commentId: T:csDBPF.TGI
  parent: csDBPF
  href: csDBPF.TGI.html
  name: TGI
  nameWithType: TGI
  fullName: csDBPF.TGI
- uid: csDBPF.TGI.CompareTo*
  commentId: Overload:csDBPF.TGI.CompareTo
  href: csDBPF.TGI.html#csDBPF_TGI_CompareTo_csDBPF_TGI_
  name: CompareTo
  nameWithType: TGI.CompareTo
  fullName: csDBPF.TGI.CompareTo
- uid: System.IComparable{csDBPF.TGI}.CompareTo(csDBPF.TGI)
  commentId: M:System.IComparable{csDBPF.TGI}.CompareTo(csDBPF.TGI)
  parent: System.IComparable{csDBPF.TGI}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(TGI)
  nameWithType: IComparable<TGI>.CompareTo(TGI)
  fullName: System.IComparable<csDBPF.TGI>.CompareTo(csDBPF.TGI)
  nameWithType.vb: IComparable(Of TGI).CompareTo(TGI)
  fullName.vb: System.IComparable(Of csDBPF.TGI).CompareTo(csDBPF.TGI)
  spec.csharp:
  - uid: System.IComparable{csDBPF.TGI}.CompareTo(csDBPF.TGI)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: csDBPF.TGI
    name: TGI
    href: csDBPF.TGI.html
  - name: )
  spec.vb:
  - uid: System.IComparable{csDBPF.TGI}.CompareTo(csDBPF.TGI)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: csDBPF.TGI
    name: TGI
    href: csDBPF.TGI.html
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: csDBPF.TGI.Equals*
  commentId: Overload:csDBPF.TGI.Equals
  href: csDBPF.TGI.html#csDBPF_TGI_Equals_System_Object_
  name: Equals
  nameWithType: TGI.Equals
  fullName: csDBPF.TGI.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: csDBPF.TGI.op_Equality*
  commentId: Overload:csDBPF.TGI.op_Equality
  href: csDBPF.TGI.html#csDBPF_TGI_op_Equality_csDBPF_TGI_csDBPF_TGI_
  name: operator ==
  nameWithType: TGI.operator ==
  fullName: csDBPF.TGI.operator ==
  nameWithType.vb: TGI.=
  fullName.vb: csDBPF.TGI.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: csDBPF.TGI.op_Equality*
    name: ==
    href: csDBPF.TGI.html#csDBPF_TGI_op_Equality_csDBPF_TGI_csDBPF_TGI_
- uid: csDBPF.TGI.op_Inequality*
  commentId: Overload:csDBPF.TGI.op_Inequality
  href: csDBPF.TGI.html#csDBPF_TGI_op_Inequality_csDBPF_TGI_csDBPF_TGI_
  name: operator !=
  nameWithType: TGI.operator !=
  fullName: csDBPF.TGI.operator !=
  nameWithType.vb: TGI.<>
  fullName.vb: csDBPF.TGI.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: csDBPF.TGI.op_Inequality*
    name: '!='
    href: csDBPF.TGI.html#csDBPF_TGI_op_Inequality_csDBPF_TGI_csDBPF_TGI_
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: csDBPF.TGI.GetHashCode*
  commentId: Overload:csDBPF.TGI.GetHashCode
  href: csDBPF.TGI.html#csDBPF_TGI_GetHashCode
  name: GetHashCode
  nameWithType: TGI.GetHashCode
  fullName: csDBPF.TGI.GetHashCode
- uid: csDBPF.DBPFTGI.KnownEntries
  commentId: F:csDBPF.DBPFTGI.KnownEntries
  name: KnownEntries
  nameWithType: DBPFTGI.KnownEntries
  fullName: csDBPF.DBPFTGI.KnownEntries
- uid: csDBPF.TGI.Matches*
  commentId: Overload:csDBPF.TGI.Matches
  href: csDBPF.TGI.html#csDBPF_TGI_Matches_csDBPF_TGI_
  name: Matches
  nameWithType: TGI.Matches
  fullName: csDBPF.TGI.Matches
- uid: csDBPF.TGI.MatchesExactly*
  commentId: Overload:csDBPF.TGI.MatchesExactly
  href: csDBPF.TGI.html#csDBPF_TGI_MatchesExactly_csDBPF_TGI_
  name: MatchesExactly
  nameWithType: TGI.MatchesExactly
  fullName: csDBPF.TGI.MatchesExactly
- uid: csDBPF.TGI.MatchesAnyKnown*
  commentId: Overload:csDBPF.TGI.MatchesAnyKnown
  href: csDBPF.TGI.html#csDBPF_TGI_MatchesAnyKnown
  name: MatchesAnyKnown
  nameWithType: TGI.MatchesAnyKnown
  fullName: csDBPF.TGI.MatchesAnyKnown
- uid: csDBPF.TGI.GetEntryType*
  commentId: Overload:csDBPF.TGI.GetEntryType
  href: csDBPF.TGI.html#csDBPF_TGI_GetEntryType
  name: GetEntryType
  nameWithType: TGI.GetEntryType
  fullName: csDBPF.TGI.GetEntryType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: csDBPF.TGI.GetEntryDetail*
  commentId: Overload:csDBPF.TGI.GetEntryDetail
  href: csDBPF.TGI.html#csDBPF_TGI_GetEntryDetail
  name: GetEntryDetail
  nameWithType: TGI.GetEntryDetail
  fullName: csDBPF.TGI.GetEntryDetail
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: csDBPF.TGI.ToString*
  commentId: Overload:csDBPF.TGI.ToString
  href: csDBPF.TGI.html#csDBPF_TGI_ToString
  name: ToString
  nameWithType: TGI.ToString
  fullName: csDBPF.TGI.ToString
- uid: csDBPF.TGI.RandomizeGroup*
  commentId: Overload:csDBPF.TGI.RandomizeGroup
  href: csDBPF.TGI.html#csDBPF_TGI_RandomizeGroup
  name: RandomizeGroup
  nameWithType: TGI.RandomizeGroup
  fullName: csDBPF.TGI.RandomizeGroup
- uid: csDBPF.TGI.RandomizeInstance*
  commentId: Overload:csDBPF.TGI.RandomizeInstance
  href: csDBPF.TGI.html#csDBPF_TGI_RandomizeInstance
  name: RandomizeInstance
  nameWithType: TGI.RandomizeInstance
  fullName: csDBPF.TGI.RandomizeInstance
